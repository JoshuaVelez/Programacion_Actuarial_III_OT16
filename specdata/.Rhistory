x
class(x)
x <- c("a","b","c","d")
x
class(x)
y <- c(1.7, "a")
class(y)
y <- c(TRUE,2)
class(y)
y <- c("a",TRUE)
class(y)
y <- c(TRUE, 10L, 8.5,1+1i, "Nacho")
y
class(y)
z <- 0:6
class(z)
as.numeric(z)
as.logical(z)
as.character(z)
z <- c(1+2i,3+4i,8,0+3i,0)
as.logical(z)
z <-c("Programacion","Actuarial","III")
as.numeric(z)
as.logical(z)
as.complex(z)
x <- list(1,"a",TRUE,1+4i)
x
x <- list(1,"a",TRUE,1+4i,1:100)
x
class(x)
?matrix
m <- matrix(nrow=2,ncol = 3)
m
dim(m)
attributes(m)
library(biocLite)
library(bioconductor)
library(BiocInstaller)
m <- matrix(nrow=2,ncol = 3)
dim(m)
attributes(m)
m
dim(m) <- c(3,2)
m
m <- matrix(1:6,3,2)
m
m <- matrix(1:6,3,2,TRUE)
m
m <- matrix(1:6,3,3, T)
m
str(m)
dim(m) <- c(2,5)
x <- c(1,2,3)
y <- c("a","b","c")
z <- c(x,y)
z
m1 <- rbind(m,x)
m1
m2 <- cbind(m,x)
m2
m1 <- rbind(m,y)
m1
m2 <- cbind(m,y)
m2
rbind(m1,y)
cbind(m2,y)
rbind(m1,y)
cbind(m2,y)
rbind(m1,y)
cbind(m2,y)
x$foo2
x$foo
x$foo[2]
x <- list(foo = 1:4, bar= 0.6, baz="Hola")
x[[c(1,3)]]
x[c(1,3)]
name <- "foo"
x[[name]]
x$name
x$foo
x <- list(a(10,12,14), b= list(3.14,2.81))
x[[c(1,3)]]
x<- matrix(1:6,2,3)
x
x[1,2]
x[2,1]
x[1,]
x[,2]
x[1,2, drop= FALSE]
x[1,]
x [1, ,drop= FALSE]
x <-(aardvark=1:5)
x$a
x[["a"]]
x[["a",exact= FALSE]]
x <-list(aardvark=1:5)
x$a
x[["a"]]
x[["a",exact= FALSE]]
airquality$Wind
airquality[1:6,0]
airquality[1:6,]
completos <- complete.cases(airquality)
completos
airquality[completos,]
airquality[comletos,][1:6,]
airquality[completos,][1:6,]
airquality[1:6,][completos,]
x <- 1:4; y <- 6:9 # si el tamano no es igual repetira el menor valor para las operaciones
x + y
x>2
x>=2
y == 8
x*y
x/y
x <- matrix(1:4,2,2); y <- matrix(rep(10,4),2,2)
x*y
x/y
x %*% y
If(x>3){y <-10}else {y<-0}
If(x>3){y <-10}else {y<-0}
If(x>3) {y <-10} else {y<-0}
If(x>3) {
y <-10
} else {y<-0}
for(i in 1:10){print(i)}
x <- c("a","b","c","d")
for(i in 1:4){print(x[i])}
for(i in 1:4){print(x[i])}
for(i in seq_along(x)){print(x[i])}
for (letra in x){print(letra)}
for(i in 1:4)print(x[i]) # se pueden omitir los parentesis si solo es una instruccion
for(i in w){print (w[i,])}
w<- matrix(1:6,2,3)
for(i in w){print (w[i,])}
for(i in seq_along(w)){print (w[i,])}
for(i in seq_len(nrow(w)){for j in seq_len(ncol(w))){print(x[i,j])}}
for(i in seq_len(nrow(w)){for j in seq_len(ncol(w))){print(w[i,j])}}
for(i in seq_len(nrow(w))){for(j in seq_len(ncol(w))){print(w[i,j])}}
z <- 5
while(z>= 3 && z<=10){print(z)}
z <- 5
while(z>= 3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ # Caminata Aleatoria
z <- z+1
} else {
z <- z-1}
}
?rbinom
z <- 5
x <- c(z)
while(z>= 3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
x <.c(x,z)
if(moneda==1){ # Caminata Aleatoria
z <- z+1
} else {
z <- z-1}
}
z <- 5
x <- c(z)
while(z>= 3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
x <-c(x,z)
if(moneda==1){ # Caminata Aleatoria
z <- z+1
} else {
z <- z-1}
}
x
?print
z <- 5
x <- c(z)
while(z>= 3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
x <-c(x,z)
if(moneda==1){ # Caminata Aleatoria
z <- z+1
} else {
z <- z-1} print(x)
}
z <- 5
x <- c(z)
while(z>= 3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
x <-c(x,z)
if(moneda==1){ # Caminata Aleatoria
z <- z+1
} else {
z <- z-1} {print(x)}
}
z <- 5
x <- c(z)
while(z>= 3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
x <-c(x,z)
if(moneda==1){ # Caminata Aleatoria
z <- z+1
} else {
z <- z-1} else {
print(x)
}
}
z <- 5
x <- c(z)
while(z>= 3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
x <-c(x,z)
if(moneda==1){ # Caminata Aleatoria
z <- z+1
} else {
z <- z-1}
}
z <- 5
x <- c(z)
while(z>= 3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
x <-c(x,z)
if(moneda==1){ # Caminata Aleatoria
z <- z+1
} else {
z <- z-1}
}
x
plot(x)
z <- 5
x <- c(z)
while(z>= 3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
x <-c(x,z)
if(moneda==1){ # Caminata Aleatoria
z <- z+0.5
} else {
z <- z-0.5}
}
str(x)
?plot
z <- 5
Caminata <- c(z)
while(z>= 3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
Caminata <-c(Caminata,z)
if(moneda==1){ # Caminata Aleatoria
z <- z+1
} else {
z <- z-1}
}
x
for (i in 1:100){ print(x[i])
z <- 5
Caminata <- c(z)
while(z>= 3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
Caminata <-c(Caminata,z)
if(moneda==1){ # Caminata Aleatoria
z <- z+1
} else {
z <- z-1}
}
}
str(x)
str(Caminata)
for (i in 1:100){ print(Caminata[i])
z <- 5
Caminata <- c(z)
while(z>= 3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
Caminata <-c(Caminata,z)
if(moneda==1){ # Caminata Aleatoria
z <- z+1
} else {
z <- z-1}
}
}
for (i in 1:100){ print(Caminata[i])
z <- 5
Caminata <- c(z)
while(z>= 3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
Caminata <-c(Caminata,z)
if(moneda==1){ # Caminata Aleatoria
z <- z+1
} else {
z <- z-1}
}
}
?count.fields
?for
Total3 <- 0
Total10 <-0
for (i in 1:100){
z <- 5
Caminata <- c(z)
while(z>= 3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
Caminata <-c(Caminata,z)
if(moneda==1){ # Caminata Aleatoria
z <- z+1
} else {
z <- z-1}
} print(Caminata[i])
if(z=2){Total3 <- Total3+1
} else{ Total10 <- Total10+1}
}
Total3
Total10
Total3 <- 0
Total10 <-0
for (i in 1:100){
z <- 5
Caminata <- c(z)
while(z>= 3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
Caminata <-c(Caminata,z)
if(moneda==1){ # Caminata Aleatoria
z <- z+1
} else {
z <- z-1}
} print(Caminata[i])
if(z=2){Total3 <- Total3+1
} else{
Total10 <- Total10+1}
}
Total3
Total10
Total3 <- 0
Total10 <-0
for (i in 1:100){
z <- 5
Caminata <- c(z)
while(z>= 3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
Caminata <-c(Caminata,z)
if(moneda==1){ # Caminata Aleatoria
z <- z+1
} else {
z <- z-1}
} print(Caminata[i])
if(z=2){Total3 <- Total3+1
} else {
Total10 <- Total10+1}
}
Total3
Total10
Total3 <- 0
Total10 <-0
for (i in 1:100){
z <- 5
Caminata <- c(z)
while(z>= 3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
Caminata <-c(Caminata,z)
if(moneda==1){ # Caminata Aleatoria
z <- z+1
} else {
z <- z-1}
} print(Caminata)
if(z==2){Total3 <- Total3+1
} else {
Total10 <- Total10+1}
}
Total3
Total10
Total3 <- 0
Total10 <-0
for (i in 1:100){
z <- 5
Caminata <- c(z)
while(z>= 3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
Caminata <-c(Caminata,z)
if(moneda==1){ # Caminata Aleatoria
z <- z+1
} else {
z <- z-1
} print(Caminata)
if(z==2){Total3 <- Total3+1
} else {
Total10 <- Total10+1}
}
Total3
Total10
Total3 <- 0
Total10 <-0
for (i in 1:100){
z <- 5
Caminata <- c(z)
while(z>= 3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
Caminata <-c(Caminata,z)
if(moneda==1){ # Caminata Aleatoria
z <- z+1
} else {
z <- z-1
} }print(Caminata)
if(z==2){Total3 <- Total3+1
} else {
Total10 <- Total10+1}
}
Total3
Total10
Total3 <- 0
Total10 <-0
for (i in 1:100){
z <- 5
Caminata <- c(z)
while(z>= 3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
Caminata <-c(Caminata,z)
if(moneda==1){ # Caminata Aleatoria
z <- z+1
} else {
z <- z-1
}
}
print(Caminata)
if(z==2){Total3 <- Total3+1
} else {
Total10 <- Total10+1}
}
Total3
Total10
suma2 <- function(x,y){
x +y
}
suma2(1,2)
mayor10 <- function(x){
x[x>10]
}
mayor10(1:20)
mayor10(runif(100,5,15))
mayorque <- function(x,n){
x[x>n]
}
mayorque(1:10,3)
promedioCol <- function(x,quitar.NA = TRUE){
nc <- ncol(x)
medias <- vector("numeric",nc)
for (i in 1:nc){
medias[i] <- mean(x[,i], na.rm = quitar.NA ) #na.rm quita los valores faltantes
}
}
promedioCol <- function(x,quitar.NA = TRUE){
nc <- ncol(x)
medias <- vector("numeric",nc)
for (i in 1:nc){
medias[i] <- mean(x[,i], na.rm = quitar.NA ) #na.rm quita los valores faltantes
}
medias
}
promedioCol(as.data.frame(c(1,2,3,NA))
)
f <- function(a,b){
a^2
}
f(2,"NA")
f <- function(a,b){
print(a)
print(b)
}
f(2)
?plot
promedioCol((c(1,2,3,NA))
)
corr <- function(directorio, horizonte=0) {
directorio <- setwd("~/GitHub/Programacion_Actuarial_III_OT16/specdata")
Cumple = completos(directorio)
idSi = Cumple[Cumple["nobs"] > horizonte, ]$id
rrel = numeric()
for (i in idSi) {
data = read.csv(paste(directorio, "/", formatC(i, width = 3, flag = "0"),".csv", sep = ""))
Hor = data[complete.cases(data), ]
rrel = c(rrel, cor(Hor$sulfate, Hor$nitrate))
}
return(rrel)
}
completos <- function(directorio, id = 1:332) {
f <- function(i) {
directorio <- setwd("~/GitHub/Programacion_Actuarial_III_OT16/specdata")
data <- vector("numeric")
data = read.csv(paste(directorio, "/", formatC(i, width = 3, flag = "0"),".csv", sep = ""))
sum(complete.cases(data))
}
nobs = sapply(id, f)
return(data.frame(id, nobs))
}
cr <- corr("~/GitHub/Programacion_Actuarial_III_OT16/specdata", 150)
head(cr)
corr("~/GitHub/Programacion_Actuarial_III_OT16/specdata", 1000) # Para correr cambiar directorio y el horizonte
cr <- corr("~/GitHub/Programacion_Actuarial_III_OT16/specdata", 150)
head(cr)
