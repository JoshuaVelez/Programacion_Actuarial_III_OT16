rankingcompleto <- function(resultado, num = "mejor") {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
resultados <- c("Infarto", "Falla Cardíaca", "Neumonía")
if ((resultado %in% resultados) == FALSE) {
stop(print("Resultado inválido"))
}
## For each state, find the hospital of the given rank
if (resultado == "Infarto") {
Col_Res <- 11
}
else if (resultado == "Falla Cardíaca") {
Col_Res <- 17
}
else {
Col_Res <- 23
}
data[, Col_Res] <- suppressWarnings(as.numeric(levels(data[, col])[data[, Col_Res]]))
data[, 2] <- as.character(data[, 2])
# Generate an empty vector that will be filled later, row by row, to
# generate the final output.
output <- vector()
estados <- levels(data[, 7])
for(i in 1:length(estados)) {
Estadodata <- data[grep(estados[i], data$State), ]
ordendata <- Estadodata[order(Estadodata[, col], Estadodata[, 2],
na.last = NA), ]
hospital <- if(num == "best") {
ordendata[1, 2]
} else if(num == "worst") {
ordendata[nrow(ordendata), 2]
} else{
ordendata[num, 2]
}
output <- append(output, c(hospital, estados[i]))
}
## Return a data frame with the hospital names and the (abbreviated)
## state name
output <- as.data.frame(matrix(output, length(estados), 2, byrow = TRUE))
colnames(output) <- c("hospital", "estado")
rownames(output) <- estados
output
}
head(rankingcompleto("Infarto",20),10)
rankingcompleto <- function(resultado, num = "mejor") {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
resultados <- c("Infarto", "Falla Cardíaca", "Neumonía")
if ((resultado %in% resultados) == FALSE) {
stop(print("Resultado inválido"))
}
## For each state, find the hospital of the given rank
if (resultado == "Infarto") {
Col_Res <- 11
}
else if (resultado == "Falla Cardíaca") {
Col_Res <- 17
}
else {
Col_Res <- 23
}
data[, Col_Res] <- suppressWarnings(as.numeric(levels(data[, col])[data[, Col_Res]]))
data[, 2] <- as.character(data[, 2])
# Generate an empty vector that will be filled later, row by row, to
# generate the final output.
output <- vector()
estados <- levels(data[, 7])
for(i in 1:length(estados)) {
Estadodata <- data[grep(estados[i], data$State), ]
ordendata <- Estadodata[order(Estadodata[, Col_Res], Estadodata[, 2],
na.last = NA), ]
hospital <- if(num == "best") {
ordendata[1, 2]
} else if(num == "worst") {
ordendata[nrow(ordendata), 2]
} else{
ordendata[num, 2]
}
output <- append(output, c(hospital, estados[i]))
}
## Return a data frame with the hospital names and the (abbreviated)
## state name
output <- as.data.frame(matrix(output, length(estados), 2, byrow = TRUE))
colnames(output) <- c("hospital", "estado")
rownames(output) <- estados
output
}
head(rankingcompleto("Infarto",20),10)
rankingcompleto <- function(resultado, num = "mejor") {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
resultados <- c("Infarto", "Falla Cardíaca", "Neumonía")
if ((resultado %in% resultados) == FALSE) {
stop(print("Resultado inválido"))
}
## For each state, find the hospital of the given rank
if (resultado == "Infarto") {
Col_Res <- 11
}
else if (resultado == "Falla Cardíaca") {
Col_Res <- 17
}
else {
Col_Res <- 23
}
data[, Col_Res] <- suppressWarnings(as.numeric(levels(data[, Col_Res])[data[, Col_Res]]))
data[, 2] <- as.character(data[, 2])
# Generate an empty vector that will be filled later, row by row, to
# generate the final output.
output <- vector()
estados <- levels(data[, 7])
for(i in 1:length(estados)) {
Estadodata <- data[grep(estados[i], data$State), ]
ordendata <- Estadodata[order(Estadodata[, Col_Res], Estadodata[, 2],
na.last = NA), ]
hospital <- if(num == "mejor") {
ordendata[1, 2]
} else if(num == "peor") {
ordendata[nrow(ordendata), 2]
} else{
ordendata[num, 2]
}
output <- append(output, c(hospital, estados[i]))
}
## Return a data frame with the hospital names and the (abbreviated)
## state name
output <- as.data.frame(matrix(output, length(estados), 2, byrow = TRUE))
colnames(output) <- c("hospital", "estado")
rownames(output) <- estados
output
}
head(rankingcompleto("Infarto",20),10)
rankingcompleto <- function(resultado, num = "mejor") {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
resultados <- c("Infarto", "Falla Cardíaca", "Neumonía")
if ((resultado %in% resultados) == FALSE) {
stop(print("Resultado inválido"))
}
## For each state, find the hospital of the given rank
if (resultado == "Infarto") {
Col_Res <- 11
}
else if (resultado == "Falla Cardíaca") {
Col_Res <- 17
}
else {
Col_Res <- 23
}
data[, Col_Res] <- suppressWarnings(as.numeric(levels(data[, Col_Res])[data[, Col_Res]]))
data[, 2] <- as.character(data[, 2])
# Generate an empty vector that will be filled later, row by row, to
# generate the final output.
output <- vector()
estados <- levels(data[, 7])
for(i in 1:length(estados)) {
Estadodata <- data[grep(estados[i], data$estados), ]
ordendata <- Estadodata[order(Estadodata[, Col_Res], Estadodata[, 2],
na.last = NA), ]
hospital <- if(num == "mejor") {
ordendata[1, 2]
} else if(num == "peor") {
ordendata[nrow(ordendata), 2]
} else{
ordendata[num, 2]
}
output <- append(output, c(hospital, estados[i]))
}
## Return a data frame with the hospital names and the (abbreviated)
## state name
output <- as.data.frame(matrix(output, length(estados), 2, byrow = TRUE))
colnames(output) <- c("hospital", "estado")
rownames(output) <- estados
output
}
head(rankingcompleto("Infarto",20),10)
rankingcompleto <- function(resultado, num = "mejor") {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
resultados <- c("Infarto", "Falla Cardíaca", "Neumonía")
if ((resultado %in% resultados) == FALSE) {
stop(print("Resultado inválido"))
}
## For each state, find the hospital of the given rank
if (resultado == "Infarto") {
Col_Res <- 11
}
else if (resultado == "Falla Cardíaca") {
Col_Res <- 17
}
else {
Col_Res <- 23
}
data[, Col_Res] <- suppressWarnings(as.numeric(levels(data[, Col_Res])[data[, Col_Res]]))
data[, 2] <- as.character(data[, 2])
# Generate an empty vector that will be filled later, row by row, to
# generate the final output.
output <- vector()
estados <- levels(data[, 7])
for(i in 1:length(estados)) {
Estadodata <- data[grep(estados[i], data$estado), ]
ordendata <- Estadodata[order(Estadodata[, Col_Res], Estadodata[, 2],
na.last = NA), ]
hospital <- if(num == "mejor") {
ordendata[1, 2]
} else if(num == "peor") {
ordendata[nrow(ordendata), 2]
} else{
ordendata[num, 2]
}
output <- append(output, c(hospital, estados[i]))
}
## Return a data frame with the hospital names and the (abbreviated)
## state name
output <- as.data.frame(matrix(output, length(estados), 2, byrow = TRUE))
colnames(output) <- c("hospital", "estado")
rownames(output) <- estados
output
}
head(rankingcompleto("Infarto",20),10)
rankingcompleto <- function(resultado, num = "mejor") {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that outcome is valid
if (!((outcome == "Infarto") | (outcome == "Falla Cardíaca")
| (outcome == "Neumonía"))) {
stop ("Resultado inválido")
}
## For each state, find the hospital of the given rank
col_res <- if (outcome == "Infarto") {
11
} else if (outcome == "Falla Cardíaca") {
17
} else {
23
}
data[, col_res] <- suppressWarnings(as.numeric(levels(data[, col_res])[data[, col_res]]))
data[, 2] <- as.character(data[, 2])
# Generate an empty vector that will be filled later, row by row, to
# generate the final output.
output <- vector()
estados <- levels(data[, 7])
for(i in 1:length(estados)) {
statedata <- data[grep(estados[i], data$State), ]
orderdata <- statedata[order(statedata[, col], statedata[, 2],
na.last = NA), ]
hospital <- if(num == "mejor") {
orderdata[1, 2]
} else if(num == "peor") {
orderdata[nrow(orderdata), 2]
} else{
orderdata[num, 2]
}
output <- append(output, c(hospital, estados[i]))
}
## Return a data frame with the hospital names and the (abbreviated)
## state name
output <- as.data.frame(matrix(output, length(estados), 2, byrow = TRUE))
colnames(output) <- c("hospital", "estado")
rownames(output) <- estados
output
}
head(rankingcompleto("Infarto",20),10)
rankingcompleto <- function(resultado, num = "mejor") {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if (resultado == "ataque") {
col_res <- 11
}
else if (resultado == "falla") {
col_res <- 17
}
else if (resultado == "neumonia") {
col_res <- 23
}
else {
stop("resultado invalido")
}
data[, col_res] <- suppressWarnings(as.numeric(levels(data[, col_res])[data[, col_res]]))
data[, 2] <- as.character(data[, 2])
# Generate an empty vector that will be filled later, row by row, to
# generate the final output.
output <- vector()
estados <- levels(data[, 7])
for(i in 1:length(estados)) {
statedata <- data[grep(estados[i], data$State), ]
orderdata <- statedata[order(statedata[, col], statedata[, 2],
na.last = NA), ]
hospital <- if(num == "mejor") {
orderdata[1, 2]
} else if(num == "peor") {
orderdata[nrow(orderdata), 2]
} else{
orderdata[num, 2]
}
output <- append(output, c(hospital, estados[i]))
}
## Return a data frame with the hospital names and the (abbreviated)
## state name
output <- as.data.frame(matrix(output, length(estados), 2, byrow = TRUE))
colnames(output) <- c("hospital", "estado")
rownames(output) <- estados
output
}
head(rankingcompleto("Infarto",20),10)
tail(rankingcompleto("Neumonía", "peor"), 3)
head(rankingcompleto("Infarto",20),10)
rankingcompleto <- function(resultado, num = "mejor") {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if (resultado == "Infarto") {
col_res <- 11
}
else if (resultado == "Falla Cardíaca") {
col_res <- 17
}
else if (resultado == "Neumonía") {
col_res <- 23
}
else {
stop("resultado invalido")
}
data[, col_res] <- suppressWarnings(as.numeric(levels(data[, col_res])[data[, col_res]]))
data[, 2] <- as.character(data[, 2])
# Generate an empty vector that will be filled later, row by row, to
# generate the final output.
output <- vector()
estados <- levels(data[, 7])
for(i in 1:length(estados)) {
statedata <- data[grep(estados[i], data$State), ]
orderdata <- statedata[order(statedata[, col], statedata[, 2],
na.last = NA), ]
hospital <- if(num == "mejor") {
orderdata[1, 2]
} else if(num == "peor") {
orderdata[nrow(orderdata), 2]
} else{
orderdata[num, 2]
}
output <- append(output, c(hospital, estados[i]))
}
## Return a data frame with the hospital names and the (abbreviated)
## state name
output <- as.data.frame(matrix(output, length(estados), 2, byrow = TRUE))
colnames(output) <- c("hospital", "estado")
rownames(output) <- estados
output
}
head(rankingcompleto("Infarto",20),10)
head(rankingcompleto("Infarto",20),10)
rankingcompleto <- function(resultado, num = "mejor") {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if (resultado == "Infarto") {
col_res <- 11
}
else if (resultado == "Falla Cardíaca") {
col_res <- 17
}
else if (resultado == "Neumonía") {
col_res <- 23
}
else {
stop("resultado invalido")
}
data[, col_res] <- suppressWarnings(as.numeric(levels(data[, col_res])[data[, col_res]]))
data[, 2] <- as.character(data[, 2])
# Generate an empty vector that will be filled later, row by row, to
# generate the final output.
output <- vector()
estados <- levels(data[, 7])
for(i in 1:length(estados)) {
statedata <- data[grep(estados[i], data[,7]), ]
orderdata <- statedata[order(statedata[, col], statedata[, 2],
na.last = NA), ]
hospital <- if(num == "mejor") {
orderdata[1, 2]
} else if(num == "peor") {
orderdata[nrow(orderdata), 2]
} else{
orderdata[num, 2]
}
output <- append(output, c(hospital, estados[i]))
}
## Return a data frame with the hospital names and the (abbreviated)
## state name
output <- as.data.frame(matrix(output, length(estados), 2, byrow = TRUE))
colnames(output) <- c("hospital", "estado")
rownames(output) <- estados
output
}
head(rankingcompleto("Infarto",20),10)
_grep
?grep
rankingcompleto <- function(resultado, num = "mejor") {
data <- read.csv("outcome-of-care-measures.csv")
if (resultado == "Infarto") {
col_res <- 11
}
else if (resultado == "Falla Cardíaca") {
col_res <- 17
}
else if (resultado == "Neumonía") {
col_res <- 23
}
else {
stop("resultado invalido")
}
data[, col_res] <- suppressWarnings(as.numeric(levels(data[, col_res])[data[, col_res]]))
data[, 2] <- as.character(data[, 2])
# Generate an empty vector that will be filled later, row by row, to
# generate the final output.
output <- vector()
estados <- levels(data[, 7])
for(i in 1:length(estados)) {
statedata <- data[grep(estados[i], data[,7]), ]
orderdata <- statedata[order(statedata[, col], statedata[, 2],
na.last = NA), ]
hospital <- if(num == "mejor") {
orderdata[1, 2]
} else if(num == "peor") {
orderdata[nrow(orderdata), 2]
} else{
orderdata[num, 2]
}
output <- append(output, c(hospital, estados[i]))
}
## Return a data frame with the hospital names and the (abbreviated)
## state name
output <- as.data.frame(matrix(output, length(estados), 2, byrow = TRUE))
colnames(output) <- c("hospital", "estado")
rownames(output) <- estados
output
}
head(rankingcompleto("Infarto",20),10)
rankingcompleto <- function(resultado, num = "mejor") {
#Datos
if(!(resultado %in% as.vector(c("Infarto","Falla Cardiaca","Neumonia")))){
stop("Invalid outcome")
}
if(resultado == "Infarto"){
resultado = 11
}
if(resultado == "Falla Cardiaca"){
resultado = 17
}
if(resultado == "Neumonia"){
resultado = 23
}
#Trabajo
out1 = read.csv("outcome-of-care-measures.csv")
out1 = out1[grep("[[:digit:]]", out1[,resultado]), ]
out2 = data.frame(out1[,2],out1[,7], out1[, resultado])
colnames(out2) = c("Hospital", "Estado", "Resultado")
out2 = out2[order(out1[,7], out1[,2]), ]
final = NULL
a = split(out2, out2[,2])
for(y in 1:54){
num2 = num
num1 = length(which(y == as.numeric(out2[,2])))
b = as.data.frame(a[y])
a = b[order(as.numeric(as.vector(b[,3])), b[,1]), ]
if(num == "mejor"){
num2 = 1
}
if (num == "peor"){
num2 = num1
}
a = data.frame(a[num2,1], a[1,2])
final = rbind(final, a)
a = split(out2, out2[,2])
num = num
}
colnames(final) = c("Hospital", "Estado")
final
}
head(rankingcompleto("Infarto",20),10)
tail(rankingcompleto("Neumonia", "peor"), 3)
tail(rankingcompleto("Falla Cardiaca"), 10)
rankingcompleto <- function(resultado, num = "mejor") {
if(!(resultado %in% as.vector(c("Infarto","Falla Cardiaca","Neumonia")))){
stop("resultado invalido")
}
if(resultado == "Infarto"){
resultado = 11
}
if(resultado == "Falla Cardiaca"){
resultado = 17
}
if(resultado == "Neumonia"){
resultado = 23
}
out1 = read.csv("outcome-of-care-measures.csv")
out1 = out1[grep("[[:digit:]]", out1[,resultado]), ]
out2 = data.frame(out1[,2],out1[,7], out1[, resultado])
colnames(out2) = c("Hospital", "Estado", "Resultado")
out2 = out2[order(out1[,7], out1[,2]), ]
final = NULL
a = split(out2, out2[,2])
for(y in 1:54){
num2 = num
num1 = length(which(y == as.numeric(out2[,2])))
b = as.data.frame(a[y])
a = b[order(as.numeric(as.vector(b[,3])), b[,1]), ]
if(num == "mejor"){
num2 = 1
}
if (num == "peor"){
num2 = num1
}
a = data.frame(a[num2,1], a[1,2])
final = rbind(final, a)
a = split(out2, out2[,2])
num = num
}
colnames(final) = c("Hospital", "Estado")
final
}
head(rankingcompleto("Infarto",20),10)
tail(rankingcompleto("Neumonia", "peor"), 3)
tail(rankingcompleto("Falla Cardiaca"), 10)
